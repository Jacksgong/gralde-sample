apply plugin: 'maven-publish'

// http://stackoverflow.com/questions/26874498/maven-publish-android-library-with-aar-and-source-jar
// publish to the remote Nexus build with `./gradlew clean build publish`

// Sample way to checkout:
// On the api/ folder and execute `gradle clean build publishToMavenLocal`. Check out result stuff
// On the `.m2/repository/cn/dreamtobe/flataar/sample/flataar-sample-api`

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        api(MavenPublication) {
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION_NAME

            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/api-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def mvnName = properties.getProperty("mvn.dev.user")
        def mvnPassword = properties.getProperty("mvn.dev.password")

        maven {
            // you even can publish to the repo folder in the buildDirwith : url "$buildDir/repo"
            url "${REPOSITORY_URL}${VERSION_NAME.endsWith('-SNAPSHOT') ? '-snapshot' : ''}"
            credentials {
                username mvnName
                password mvnPassword
            }
        }
    }
}
